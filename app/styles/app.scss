$primary: "grey";
$accent: "orange";
$warn: "red";

@import 'ember-paper';
@import 'user-card';
@font-face {
  font-family: 'Rockit';
  src: url('../assets/fonts/Rockit.ttf' ) format('truetype'); 
}

.boombox-app {
  min-width: 700px;
  max-width: 1000px;
  margin: 0 auto;
  font-family: "lucida grande", sans-serif;
  padding-top: 18px;
  padding-bottom: 100px;
}

.boombox-app header h1 {
  font-size: 30px;
  height: 130px;
  text-indent: 100%;
  background: url(../assets/images/Spotify_Logo_RGB_Green.png) no-repeat center;
  background-size: contain;
  overflow: hidden;
  margin: auto;
}

.marvel-app header h1 {
  font-size: 30px;
  height: 130px;
  text-indent: 100%;
  background: url(../assets/images/marvelbanner.jpg) no-repeat center;
  background-size: contain;
  overflow: hidden;
  margin: auto;
}

.badge {
  background-color: #1ED760;
  border-radius: 100%;
  width: 2em;
  float: right;
  line-height: 2em;
  color: white;
  text-align: center;
  font-size: large;
}

.badge span {
  position: relative;
  top: -.5em;
}

.playlist-name {
  font-family: 'Rockit';
  font-size: smaller;
  margin: 5px;
}

.site-name {
  line-height: 35em;
  margin: 6em 5em 10em auto;

  h1 {
    font-family: 'Rockit';
  }
}

.spot-track {
  width: 64px;
  height: 64px;
}

/*Mixin to put items on a circle
[1] - Allows children to be absolutely positioned
[2] - Allows the mixin to be used on a list
[3] - In case box-sizing: border-box has been enabled
[4] - Allows any type of direct children to be targeted

@param {Integer} $nb-items - Number or items
@param {Length} $circle-size - Container size
@param {Length} $item-size - Item size
@param {String | false} $class-for-IE - Base class name for old IE*/
@mixin distribute-on-circle( $nb-items, $circle-size, $item-size, $class-for-IE: false ) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);
  
  position: relative; /* 1 */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none; /* 2 */ 
  box-sizing: content-box; /* 3 */ 
  
  > * { /* 4 */
    display: block;
    position: absolute;
    top:  50%; 
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -$half-item;
  }
  
  $angle: (360 / $nb-items);
  $rot: 0;

  @for $i from 1 through $nb-items {
    @if not $class-for-IE {
      > :nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg) translate($half-parent) rotate($rot * -1deg);
      }
    } @else {
      > .#{$class-for-IE}#{$i} {
        // If CSS transforms are not supported
        $mt: sin($rot * pi() / 180) * $half-parent - $half-item;
        $ml: cos($rot * pi() / 180) * $half-parent - $half-item;
        margin: $mt 0 0 $ml;
      }
    }
    $rot: ($rot + $angle);
  }
}

.circle-container {
  @include distribute-on-circle(7, 35em, 8em, false); 
  margin: 5em 5em 10em auto;
  border: solid 5px tomato;
  filter: grayscale(100%);
  &:hover {
    filter: grayscale(0);
  }
  // padding: 2em;
}

.circle-container img { 
  border: solid 5px tomato;
  background-color: white;
  display: block; 
  width: 100%; 
  border-radius: 50%;
  filter: grayscale(100%);

  &:hover {
    filter: grayscale(0);
  }
}

.circle-marvel {
  @include distribute-on-circle(12, 35em, 6em, false); 
  margin: 5em auto 10em auto;
  border: solid 5px tomato;
  filter: grayscale(100%);
  &:hover {
    filter: grayscale(0);
  }
  // padding: 2em;
}

.circle-marvel img { 
  border: solid 5px tomato;
  background-color: white;
  display: block; 
  width: 100%; 
  border-radius: 50%;
  filter: grayscale(100%);

  &:hover {
    filter: grayscale(0);
  }
}